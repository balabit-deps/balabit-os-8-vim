From e031fe90cf2e375ce861ff5e5e281e4ad229ebb9 Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Sun, 5 Dec 2021 12:06:24 +0000
Subject: [PATCH] patch 8.2.3741: using freed memory in open command

Problem:    Using freed memory in open command.
Solution:   Make a copy of the current line.
---
 src/ex_docmd.c               | 10 +++++++---
 src/testdir/test_ex_mode.vim | 13 +++++++++++++
 src/version.c                |  2 ++
 3 files changed, 22 insertions(+), 3 deletions(-)

--- a/src/ex_docmd.c
+++ b/src/ex_docmd.c
@@ -6028,13 +6028,17 @@ ex_open(exarg_T *eap)
 	regmatch.regprog = vim_regcomp(eap->arg, p_magic ? RE_MAGIC : 0);
 	if (regmatch.regprog != NULL)
 	{
+	    // make a copy of the line, when searching for a mark it might be
+	    // flushed
+	    char_u *line = vim_strsave(ml_get_curline());
+
 	    regmatch.rm_ic = p_ic;
-	    p = ml_get_curline();
-	    if (vim_regexec(&regmatch, p, (colnr_T)0))
-		curwin->w_cursor.col = (colnr_T)(regmatch.startp[0] - p);
+	    if (vim_regexec(&regmatch, line, (colnr_T)0))
+		curwin->w_cursor.col = (colnr_T)(regmatch.startp[0] - line);
 	    else
 		emsg(_(e_nomatch));
 	    vim_regfree(regmatch.regprog);
+	    vim_free(line);
 	}
 	/* Move to the NUL, ignore any other arguments. */
 	eap->arg += STRLEN(eap->arg);
--- a/src/version.c
+++ b/src/version.c
@@ -750,6 +750,8 @@ static char *(features[]) =
 static int included_patches[] =
 {   /* Add new patch number below this line */
 /**/
+    3741,
+/**/
     3669,
 /**/
     3625,
--- a/src/testdir/test_messages.vim
+++ b/src/testdir/test_messages.vim
@@ -146,11 +146,14 @@ func Test_mode_message_at_leaving_insert
   call assert_equal('run', job_status(term_getjob(buf)))
 
   call term_sendkeys(buf, "i")
+  call term_wait(buf, 400)
   call WaitForAssert({-> assert_match('^-- INSERT --\s*$', term_getline(buf, rows))})
   call term_sendkeys(buf, "\<Esc>")
+  call term_wait(buf, 400)
   call WaitForAssert({-> assert_match('^\s*$', term_getline(buf, rows))})
 
   call term_sendkeys(buf, ":qall!\<CR>")
+  call term_wait(buf, 400)
   call WaitForAssert({-> assert_equal('dead', job_status(term_getjob(buf)))})
   exe buf . 'bwipe!'
   call delete(testfile)
