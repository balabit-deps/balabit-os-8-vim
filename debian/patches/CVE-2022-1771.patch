From 51f0bfb88a3554ca2dde777d78a59880d1ee37a8 Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Tue, 17 May 2022 20:11:02 +0100
Subject: [PATCH] patch 8.2.4975: recursive command line loop may cause a crash

Problem:    Recursive command line loop may cause a crash.
Solution:   Limit recursion of getcmdline().
---
 src/ex_getln.c               | 12 ++++++++++++
 src/testdir/test_cmdline.vim | 12 ++++++++++++
 src/version.c                |  2 ++
 3 files changed, 26 insertions(+)

--- vim-8.1.2269.orig/src/ex_getln.c
+++ vim-8.1.2269/src/ex_getln.c
@@ -784,6 +784,7 @@ getcmdline_int(
     int		indent,		// indent for inside conditionals
     int		init_ccline)	// clear ccline first
 {
+    static int	depth = 0;	    // call depth
     int		c;
 #ifdef FEAT_EVAL
     int		save_new_cmdpos = new_cmdpos;
@@ -816,6 +817,9 @@ getcmdline_int(
     int		did_save_ccline = FALSE;
     int		cmdline_type;
 
+    // one recursion level deeper
+    ++depth;
+
     if (ccline.cmdbuff != NULL)
     {
 	// Being called recursively.  Since ccline is global, we need to save
@@ -869,6 +873,13 @@ getcmdline_int(
 	ccline.cmdlen = indent;
     }
 
+    if (depth == 50)
+    {
+	// Somehow got into a loop recursively calling getcmdline(), bail out.
+	emsg(_("E169: Command too recursive"));
+	goto theend;
+    }
+
     ExpandInit(&xpc);
     ccline.xpc = &xpc;
 
@@ -2404,6 +2415,7 @@ theend:
     {
 	char_u *p = ccline.cmdbuff;
 
+	--depth;
 	if (did_save_ccline)
 	    restore_cmdline(&save_ccline);
 	else
--- vim-8.1.2269.orig/src/testdir/test_cmdline.vim
+++ vim-8.1.2269/src/testdir/test_cmdline.vim
@@ -842,3 +842,15 @@ func Test_buffers_lastused()
   bwipeout bufb
   bwipeout bufc
 endfunc
+
+func Test_recursive_register()
+  let @= = ''
+  silent! ?e/
+  let caught = 'no'
+  try
+    normal // 
+  catch /E169:/
+    let caught = 'yes'
+  endtry
+  call assert_equal('yes', caught)
+endfunc
\ No newline at end of file
--- vim-8.1.2269.orig/src/version.c
+++ vim-8.1.2269/src/version.c
@@ -1614,6 +1614,8 @@ static int included_patches[] =
 /**/
     1849,
 /**/
+    4975,
+/**/
     1848,
 /**/
     1847,
