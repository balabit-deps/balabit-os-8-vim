From 8a0bbe7b8aad6f8da28dee218c01bc8a0185a2d5 Mon Sep 17 00:00:00 2001
From: Christian Brabandt <cb@256bit.org>
Date: Thu, 1 Aug 2024 20:16:51 +0200
Subject: [PATCH] patch 9.1.0647: [security] use-after-free in
 tagstack_clear_entry

Problem:  [security] use-after-free in tagstack_clear_entry
          (Suyue Guo )
Solution: Instead of manually calling vim_free() on each of the tagstack
          entries, let's use tagstack_clear_entry(), which will
          also free the stack, but using the VIM_CLEAR macro,
          which prevents a use-after-free by setting those pointers
          to NULL

This addresses CVE-2024-41957

Github advisory:
https://github.com/vim/vim/security/advisories/GHSA-f9cr-gv85-hcr4

Signed-off-by: Christian Brabandt <cb@256bit.org>
---
 src/testdir/crash/double_free | Bin 0 -> 561 bytes
 src/testdir/test_crash.vim    |   6 ++++++
 src/version.c                 |   2 ++
 src/window.c                  |   5 +----
 4 files changed, 9 insertions(+), 4 deletions(-)
 create mode 100644 src/testdir/crash/double_free

Index: vim-8.1.2269/src/version.c
===================================================================
--- vim-8.1.2269.orig/src/version.c
+++ vim-8.1.2269/src/version.c
@@ -5298,6 +5298,8 @@ static int included_patches[] =
 /**/
     17,
 /**/
+    647,
+/**/
     16,
 /**/
     15,
Index: vim-8.1.2269/src/window.c
===================================================================
--- vim-8.1.2269.orig/src/window.c
+++ vim-8.1.2269/src/window.c
@@ -4919,10 +4919,7 @@ win_free(
     win_free_lsize(wp);
 
     for (i = 0; i < wp->w_tagstacklen; ++i)
-    {
-	vim_free(wp->w_tagstack[i].tagname);
-	vim_free(wp->w_tagstack[i].user_data);
-    }
+	tagstack_clear_entry(&wp->w_tagstack[i]);
     vim_free(wp->w_localdir);
 
     /* Remove the window from the b_wininfo lists, it may happen that the
Index: vim-8.1.2269/src/proto/tag.pro
===================================================================
--- vim-8.1.2269.orig/src/proto/tag.pro
+++ vim-8.1.2269/src/proto/tag.pro
@@ -10,4 +10,5 @@ int expand_tags(int tagnames, char_u *pa
 int get_tags(list_T *list, char_u *pat, char_u *buf_fname);
 void get_tagstack(win_T *wp, dict_T *retdict);
 int set_tagstack(win_T *wp, dict_T *d, int action);
+void tagstack_clear_entry(taggy_T *item);
 /* vim: set ft=c : */
Index: vim-8.1.2269/src/tag.c
===================================================================
--- vim-8.1.2269.orig/src/tag.c
+++ vim-8.1.2269/src/tag.c
@@ -81,7 +81,6 @@ static void print_tag_list(int new_tag,
 #if defined(FEAT_QUICKFIX) && defined(FEAT_EVAL)
 static int add_llist_tags(char_u *tag, int num_matches, char_u **matches);
 #endif
-static void tagstack_clear_entry(taggy_T *item);
 
 static char_u *bottommsg = (char_u *)N_("E555: at bottom of tag stack");
 static char_u *topmsg = (char_u *)N_("E556: at top of tag stack");
@@ -3851,7 +3850,7 @@ find_extra(char_u **pp)
 /*
  * Free a single entry in a tag stack
  */
-    static void
+    void
 tagstack_clear_entry(taggy_T *item)
 {
     VIM_CLEAR(item->tagname);
