[Ubuntu note: test files src/testdir/test_ex_mode.vim doesnt exist for this
release, so removing it]

From 7ac5023a5f1a37baafbe1043645f97ba3443d9f6 Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Tue, 7 Mar 2023 21:05:04 +0000
Subject: [PATCH] patch 9.0.1392: using NULL pointer with nested :open command

Problem:    Using NULL pointer with nested :open command.
Solution:   Check that ccline.cmdbuff is not NULL.
---
 src/getchar.c                | 17 ++++++++++-------
 src/testdir/term_util.vim    |  5 +++++
 src/testdir/test_ex_mode.vim | 22 ++++++++++++++++++++++
 src/version.c                |  2 ++
 4 files changed, 39 insertions(+), 7 deletions(-)

--- vim-8.1.2269.orig/src/getchar.c
+++ vim-8.1.2269/src/getchar.c
@@ -2687,7 +2687,7 @@ vungetc(int c)
     static int
 vgetorpeek(int advance)
 {
-    int		c, c1;
+    int		c;
     int		timedout = FALSE;	    /* waited for more than 1 second
 						for mapping to complete */
     int		mapdepth = 0;	    /* check for recursive mapping */
@@ -3045,7 +3045,7 @@ vgetorpeek(int advance)
 #ifdef FEAT_CMDL_INFO
 		showcmd_idx = 0;
 #endif
-		c1 = 0;
+		int showing_partial = FALSE;
 		if (typebuf.tb_len > 0 && advance && !exmode_active)
 		{
 		    if (((State & (NORMAL | INSERT)) || State == LANGMAP)
@@ -3059,7 +3059,7 @@ vgetorpeek(int advance)
 			    edit_putchar(typebuf.tb_buf[typebuf.tb_off
 						+ typebuf.tb_len - 1], FALSE);
 			    setcursor(); /* put cursor back where it belongs */
-			    c1 = 1;
+			    showing_partial = TRUE;
 			}
 #ifdef FEAT_CMDL_INFO
 			/* need to use the col and row from above here */
@@ -3080,6 +3080,7 @@ vgetorpeek(int advance)
 
 		    /* this looks nice when typing a dead character map */
 		    if ((State & CMDLINE)
+			    && get_cmdline_info()->cmdbuff != NULL
 #if defined(FEAT_CRYPT) || defined(FEAT_EVAL)
 			    && cmdline_star == 0
 #endif
@@ -3088,7 +3089,7 @@ vgetorpeek(int advance)
 		    {
 			putcmdline(typebuf.tb_buf[typebuf.tb_off
 						+ typebuf.tb_len - 1], FALSE);
-			c1 = 1;
+			showing_partial = TRUE;
 		    }
 		}
 
@@ -3124,11 +3125,12 @@ vgetorpeek(int advance)
 		if (showcmd_idx != 0)
 		    pop_showcmd();
 #endif
-		if (c1 == 1)
+		if (showing_partial)
 		{
 		    if (State & INSERT)
 			edit_unputchar();
-		    if (State & CMDLINE)
+		    if ((State & CMDLINE)
+					&& get_cmdline_info()->cmdbuff != NULL)
 			unputcmdline();
 		    else
 			setcursor();	/* put cursor back where it belongs */
--- vim-8.1.2269.orig/src/testdir/term_util.vim
+++ vim-8.1.2269/src/testdir/term_util.vim
@@ -61,6 +61,10 @@ func RunVimInTerminal(arguments, options
 
   let cmd = GetVimCommandCleanTerm() .. a:arguments
 
+  if get(a:options, 'no_clean', 0)
+    let cmd = substitute(cmd, '--clean', '', '')
+  endif
+
   let options = {
 	\ 'curwin': 1,
 	\ 'term_rows': rows,
