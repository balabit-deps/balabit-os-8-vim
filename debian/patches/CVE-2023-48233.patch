From ac63787734fda2e294e477af52b3bd601517fa78 Mon Sep 17 00:00:00 2001
From: Christian Brabandt <cb@256bit.org>
Date: Tue, 14 Nov 2023 20:45:48 +0100
Subject: [PATCH] patch 9.0.2108: [security]: overflow with count for :s
 command

Problem:  [security]: overflow with count for :s command
Solution: Abort the :s command if the count is too large

If the count after the :s command is larger than what fits into a
(signed) long variable, abort with e_value_too_large.

Adds a test with INT_MAX as count and verify it correctly fails.

It seems the return value on Windows using mingw compiler wraps around,
so the initial test using :s/./b/9999999999999999999999999990 doesn't
fail there, since the count is wrapping around several times and finally
is no longer larger than 2147483647. So let's just use 2147483647 in the
test, which hopefully will always cause a failure

Signed-off-by: Christian Brabandt <cb@256bit.org>
---
 runtime/doc/change.txt          | 8 ++++----
 runtime/doc/cmdline.txt         | 3 ++-
 runtime/doc/tags                | 1 +
 src/ex_cmds.c                   | 7 +++++++
 src/testdir/test_substitute.vim | 1 +
 src/version.c                   | 2 ++
 6 files changed, 17 insertions(+), 5 deletions(-)

--- vim-8.1.2269.orig/runtime/doc/change.txt
+++ vim-8.1.2269/runtime/doc/change.txt
@@ -631,9 +631,9 @@ For other systems the tmpnam() library f
 			current line only.  When [count] is given, replace in
 			[count] lines, starting with the last line in [range].
 			When [range] is omitted start in the current line.
-							*E939*
-			[count] must be a positive number.  Also see
-			|cmdline-ranges|.
+							*E939* *E1510*
+			[count] must be a positive number (max 2147483647)
+			Also see |cmdline-ranges|.
 
 			See |:s_flags| for [flags].
 
--- vim-8.1.2269.orig/runtime/doc/cmdline.txt
+++ vim-8.1.2269/runtime/doc/cmdline.txt
@@ -346,6 +346,7 @@ terminals)
 		A positive number represents the absolute index of an entry
 		as it is given in the first column of a :history listing.
 		This number remains fixed even if other entries are deleted.
+		(see |E1510|)
 
 		A negative number means the relative position of an entry,
 		counted from the newest entry (which has index -1) backwards.
--- vim-8.1.2269.orig/src/ex_cmds.c
+++ vim-8.1.2269/src/ex_cmds.c
@@ -3794,6 +3794,13 @@ do_sub(exarg_T *eap)
 	    emsg(_(e_zerocount));
 	    return;
 	}
+	else if (i >= INT_MAX)
+	{
+	    char	buf[20];
+	    vim_snprintf(buf, sizeof(buf), "%ld", i);
+	    semsg(_("E1510: Value too large: %s"), buf);
+	    return;
+	}
 	eap->line1 = eap->line2;
 	eap->line2 += i - 1;
 	if (eap->line2 > curbuf->b_ml.ml_line_count)
--- vim-8.1.2269.orig/src/testdir/test_substitute.vim
+++ vim-8.1.2269/src/testdir/test_substitute.vim
@@ -208,6 +208,7 @@ func Test_substitute_flag_n()
   " No substitution should have been done.
   call assert_equal(lines, getline(1, '$'))
 
+  call assert_fails('s/./b/2147483647', 'E1510:')
   bwipe!
 endfunc
 
--- vim-8.1.2269.orig/src/version.c
+++ vim-8.1.2269/src/version.c
@@ -1086,6 +1086,8 @@ static int included_patches[] =
 /**/
     2107,
 /**/
+    2108,
+/**/
     2106,
 /**/
     2105,
