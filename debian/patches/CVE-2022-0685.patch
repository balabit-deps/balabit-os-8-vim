From 5921aeb5741fc6e84c870d68c7c35b93ad0c9f87 Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Sat, 19 Feb 2022 11:20:12 +0000
Subject: [PATCH] patch 8.2.4418: crash when using special multi-byte character

Problem:    Crash when using special multi-byte character.
Solution:   Don't use isalpha() for an arbitrary character.
---
 src/charset.c                  | 6 ++++++
 src/filepath.c                 | 2 +-
 src/proto/charset.pro          | 2 +-
 src/testdir/test_autochdir.vim | 8 ++++++++
 src/version.c                  | 2 ++
 5 files changed, 18 insertions(+), 2 deletions(-)

--- vim-8.1.2269.orig/src/charset.c
+++ vim-8.1.2269/src/charset.c
@@ -1653,6 +1653,12 @@ vim_isupper(int c)
 }
 
     int
+vim_isalpha(int c)
+{
+    return vim_islower(c) || vim_isupper(c);
+}
+
+    int
 vim_toupper(int c)
 {
     if (c <= '@')
--- vim-8.1.2269.orig/src/filepath.c
+++ vim-8.1.2269/src/filepath.c
@@ -3300,7 +3300,7 @@ unix_expandpath(
 	else if (path_end >= path + wildoff
 			 && (vim_strchr((char_u *)"*?[{~$", *path_end) != NULL
 			     || (!p_fic && (flags & EW_ICASE)
-					     && isalpha(PTR2CHAR(path_end)))))
+					  && vim_isalpha(PTR2CHAR(path_end)))))
 	    e = p;
 	if (has_mbyte)
 	{
--- vim-8.1.2269.orig/src/proto/charset.pro
+++ vim-8.1.2269/src/proto/charset.pro
@@ -47,6 +47,7 @@ int vim_isxdigit(int c);
 int vim_isbdigit(int c);
 int vim_islower(int c);
 int vim_isupper(int c);
+int vim_isalpha(int c);
 int vim_toupper(int c);
 int vim_tolower(int c);
 char_u *skiptowhite(char_u *p);
@@ -59,5 +60,4 @@ int hexhex2nr(char_u *p);
 int rem_backslash(char_u *str);
 void backslash_halve(char_u *p);
 char_u *backslash_halve_save(char_u *p);
-void ebcdic2ascii(char_u *buffer, int len);
 /* vim: set ft=c : */
