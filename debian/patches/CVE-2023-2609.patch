[Ubuntu note: removed changes made to version.c because they were not needed
 to fix the vulnerability. Modifications were made to register.c changes due
 to spacing differences. Modifications were made to test_registers.vim since
 some tests available in vim 9.0.1531 were still not implemented in this
 version of the code.
 -- Camila Camargo de Matos <camila.camargodematos@canonical.com>]

Origin: backport, https://github.com/vim/vim/commit/d1ae8366aff286d41e7f5bc513cc0a1af5130aad

From d1ae8366aff286d41e7f5bc513cc0a1af5130aad Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Tue, 9 May 2023 17:09:30 +0100
Subject: [PATCH] patch 9.0.1531: crash when register contents ends up being
 invalid

Problem:    Crash when register contents ends up being invalid.
Solution:   Check "y_array" is not NULL.
---
 src/register.c                 |  2 +-
 src/testdir/test_registers.vim | 17 +++++++++++++++++
 src/version.c                  |  2 ++
 3 files changed, 20 insertions(+), 1 deletion(-)

Index: vim-8.1.2269/src/register.c
===================================================================
--- vim-8.1.2269.orig/src/register.c
+++ vim-8.1.2269/src/register.c
@@ -304,7 +304,7 @@ get_register(
 	if (copy)
 	{
 	    // If we run out of memory some or all of the lines are empty.
-	    if (reg->y_size == 0)
+	    if (reg->y_size == 0 || y_current->y_array == NULL)
 		reg->y_array = NULL;
 	    else
 		reg->y_array = ALLOC_MULT(char_u *, reg->y_size);
Index: vim-8.1.2269/src/testdir/test_registers.vim
===================================================================
--- vim-8.1.2269.orig/src/testdir/test_registers.vim
+++ vim-8.1.2269/src/testdir/test_registers.vim
@@ -1,4 +1,6 @@
 
+source shared.vim
+
 func Test_yank_shows_register()
     enew
     set report=0
@@ -147,6 +149,23 @@ func Test_register_one()
   bwipe!
 endfunc
 
+" This was causing a crash because y_append was ending up being NULL
+func Test_zero_y_append()
+  " Run in a separate Vim instance because changing 'encoding' may cause
+  " trouble for later tests.
+  let lines =<< trim END
+      d
+      silent ?n
+      next <sfile>
+      so
+      sil! norm 0VPSP
+      set enc=latin1
+       
+  END
+  call writefile(lines, 'XTest_zero_y_append', 'D')
+  call RunVim([], [], '-u NONE -i NONE -e -s -S XTest_zero_y_append -c qa\!')
+endfunc
+
 " Check that replaying a typed sequence does not use an Esc and following
 " characters as an escape sequence.
 func Test_recording_esc_sequence()
